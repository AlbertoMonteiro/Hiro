<?xml version="1.0" ?>
<project name="Hiro.Web" default="test" xmlns="http://nant.sf.net/schemas/nant.xsd">
	<property name="build.dir" value="build" />
  <property name="library.dir" value="lib"/>
  <property name="target.framework" value="net-3.5" readonly="false" />
	<property name="nant.settings.currentframework" value="net-3.5" />
  <property name="debug" value="false"/>
	<!-- User targets -->
	<target name="clean" description="Delete Automated Build artifacts">
		<delete dir="${build.dir}" if="${directory::exists(build.dir)}"/>
	</target>

  <target name="net-2.0" description="Compiles the core project assembly and targets the .NET Framework v2.0">
    <property name="target.framework" value="net-2.0" />
    <call target="compile-core"/>
  </target>

  <target name="net-3.5" description="Compiles the core project assembly and targets the .NET Framework v3.5">
    <property name="target.framework" value="net-3.5" />
    <call target="compile-core"/>
  </target>

  <target name="compile" description="Compiles using the AutomatedDebug Configuration">
    <call target="net-2.0"/>
    <call target="net-3.5"/>
  </target>

  <target name="compile-core" description="Compiles the core project assembly">
    <mkdir dir="${build.dir}" unless="${directory::exists(build.dir)}"/>
    <property name="output.dir" value="${build.dir}\${target.framework}"/>

    <mkdir dir="${output.dir}" unless="${directory::exists(output.dir)}"/>
    <csc target="library" doc="${output.dir}\Hiro.Web.xml" noconfig="true" output="${output.dir}\Hiro.Web.dll" debug="${debug}">
      <sources>
        <include name="src/Core/**/*.cs" />
      </sources>
      <references>
        <include name="System.dll" />
        <include name="System.Core.dll" if="${target.framework == 'net-3.5'}"/>
        <include name="System.Data.dll"/>
        <include name="System.Web.dll"/>
        <include name="System.Xml.dll" />
        <include name="${library.dir}\Hiro.Containers.dll"/>
        <include name="${library.dir}\Hiro.dll"/>
        <include name="${library.dir}\LinqBridge.dll" if="${target.framework == 'net-2.0'}"/>
      </references>
    </csc>
    
    <copy todir="${output.dir}">
      <fileset basedir="${library.dir}">
        <include name="Hiro.Web.dll"/>
        <include name="Hiro.dll"/>
        <include name="LinqBridge.dll" if="${target.framework == 'net-2.0'}"/>
      </fileset>
    </copy>
  </target>
  
	<target name="test" depends="compile, run-unit-tests" 
		description="Compile and Run Tests" />
		
	<target name="full" depends="clean, test, dist"	description="Compiles, tests, and produces distributions" />

	<!-- Internal targets -->
  <target name="compile-unit-tests" depends="compile-core" description="Compiles the unit tests for the core assembly">
    <property name="debug.dir" value="${build.dir}\Debug"/>
    <property name="unittest.dir" value="${debug.dir}\UnitTests"/>
    <property name="output.dir" value="${build.dir}\${target.framework}"/>

    <mkdir dir="${build.dir}" unless="${directory::exists(build.dir)}"/>
    <mkdir dir="${debug.dir}" unless="${directory::exists(debug.dir)}"/>
    <mkdir dir="${unittest.dir}" unless="${directory::exists(unittest.dir)}"/>

    <csc target="library" noconfig="true" output="${unittest.dir}\Hiro.Web.UnitTests.dll" debug="${debug}">
      <sources>
        <include name="src/UnitTests/**/*.cs" />
      </sources>
      <references>
        <include name="System.dll" />
        <include name="System.Core.dll"/>
        <include name="System.Data.dll"/>
        <include name="System.Web.dll"/>
        <include name="System.Xml.dll" />
        <include name="${output.dir}\Hiro.Web.dll"/>
        <include name="${library.dir}\Hiro.Containers.dll"/>
        <include name="${library.dir}\Hiro.dll"/>        
        <include name="${library.dir}\nunit.framework.dll"/>
        <include name="${library.dir}\Moq.dll"/>
      </references>
    </csc>
    
    <copy todir="${unittest.dir}">
      <fileset basedir="${library.dir}">
        <include name="Hiro.Web.dll"/>
        <include name="Hiro.dll"/>
        <include name="Hiro.Containers.dll"/>
        <include name="nunit.framework.dll"/>
        <include name="Moq.dll"/>
      </fileset>
    </copy>
    
    <copy todir="${unittest.dir}">
      <fileset basedir="${output.dir}">
        <include name="Hiro.Containers.dll"/>
        <include name="Hiro.dll"/>
        <include name="Hiro.Web.dll"/>
      </fileset>
    </copy>
  </target>
  
  <target name="run-unit-tests" depends="compile-unit-tests">

    <property name="debug.dir" value="${build.dir}\Debug"/>
    <property name="unittest.dir" value="${debug.dir}\UnitTests"/>
    <mkdir dir="${build.dir}\test-reports" />
    <exec program="regsvr32" workingdir="tools\NCover" commandline="/s CoverLib.dll" />
    <exec program="tools\ncover\NCover.Console.exe"
			workingdir="${build.dir}\Debug\UnitTests">
      <arg value="//w &quot;.&quot;" />
      <arg value="//x &quot;..\..\test-reports\Coverage.xml&quot;" />
      <arg value="&quot;..\..\..\tools\nunit\nunit-console.exe&quot;" />
      <arg value="&quot;Hiro.Web.UnitTests.dll&quot; &quot;/xml:..\..\test-reports\UnitTests.xml&quot; &quot;/nologo&quot;" />
    </exec>
    <delete dir="${unittest.dir}" if="${directory::exists(unittest.dir)}"/>
  </target>

  <target name="dist" depends="clean, compile">
    <mkdir dir="${build.dir}\dist" />
    <mkdir dir="${build.dir}\dist\net-2.0" />
    <mkdir dir="${build.dir}\dist\net-3.5" />

    <!--Copy the .NET 2.0 build files-->
    <copy todir="${build.dir}\dist\net-2.0">
      <fileset basedir="${build.dir}\net-2.0">
        <include name="**\*"/>
        <exclude name="**\*.pdb" />
      </fileset>
    </copy>

    <!--Copy the .NET 3.5 build files-->
    <copy todir="${build.dir}\dist\net-3.5">
      <fileset basedir="${build.dir}\net-3.5">
        <include name="**\*"/>
        <exclude name="**\*.pdb" />
      </fileset>
    </copy>

    <!--Copy the license file-->
    <copy todir="${build.dir}\dist">
      <fileset basedir="${build.dir}\..">
        <include name="Hiro.License.txt"/>>
      </fileset>
    </copy>

    <!-- Copy the Hiro core assemblies -->
    <copy todir="${build.dir}\..\lib">
      <fileset basedir="${build.dir}\..\lib">
        <include name="Hiro.Web.dll"/>>
        <include name="Hiro.Containers.dll"/>>
        <include name="Hiro.dll"/>>
      </fileset>
    </copy>

    <zip zipfile="${build.dir}\Hiro.Web.zip">
      <fileset basedir="${build.dir}\dist">
        <include name="**\*" />
      </fileset>
    </zip>

    <delete dir="${build.dir}\dist"/>
  </target>
	
</project>

